include <iostream>
#include <string>
using namespace std;

const int MAX_PATIENTS = 100; // maximum number of patients

struct Patient {
    string name;
    int age;
    string gender;
    float height;
    float weight;
    float bmi;
    string diagnosis;
    string labResults[5];
};

Patient patients[MAX_PATIENTS]; // array to store patients
int numPatients = 0; // number of patients currently in the system

// function to add a new patient
void addPatient() {
    if (numPatients < MAX_PATIENTS) {
        cout << "Enter patient name: ";
        getline(cin, patients[numPatients].name);
        cout << "Enter patient age: ";
        cin >> patients[numPatients].age;
        cout << "Enter patient gender: ";
        cin >> patients[numPatients].gender;
        cout << "Enter patient height (in meters): ";
        cin >> patients[numPatients].height;
        cout << "Enter patient weight (in kilograms): ";
        cin >> patients[numPatients].weight;
        patients[numPatients].bmi = patients[numPatients].weight / (patients[numPatients].height * patients[numPatients].height);
        cout << "Enter patient diagnosis: ";
        cin >> patients[numPatients].diagnosis;
        for (int i = 0; i < 5; i++) {
            cout << "Enter lab result " << i+1 << ": ";
            cin >> patients[numPatients].labResults[i];
        }
        numPatients++;
    }
    else {
        cout << "Maximum number of patients reached." << endl;
    }
}

// function to display patient information
void displayPatient(int index) {
    cout << "Name: " << patients[index].name << endl;
    cout << "Age: " << patients[index].age << endl;
    cout << "Gender: " << patients[index].gender << endl;
    cout << "Height: " << patients[index].height << " meters" << endl;
    cout << "Weight: " << patients[index].weight << " kilograms" << endl;
    cout << "BMI: " << patients[index].bmi << endl;
    cout << "Diagnosis: " << patients[index].diagnosis << endl;
    cout << "Lab Results:" << endl;
    for (int i = 0; i < 5; i++) {
        cout << "- " << patients[index].labResults[i] << endl;
    }
}

// function to search for a patient by name
void searchPatient() {
    string name;
    cout << "Enter patient name: ";
    getline(cin, name);
    for (int i = 0; i < numPatients; i++) {
        if (patients[i].name == name) {
            displayPatient(i);
            return;
        }
    }
    cout << "Patient not found." << endl;
}

// main function
int main() {
    int choice;
    do {
        cout << "1. Add a new patient" << endl;
        cout << "2. Search for a patient" << endl;
        cout << "3. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); // ignore newline character
        switch (choice) {
        case 1:
            addPatient();
            break;
        case 2:
            searchPatient();
            break;
        case 3:
            cout << "Exiting program..." << endl;
            break;
        default:
            cout << "Invalid choice." << endl;
        }
    } while (choice != 3);
    return 0;
}
    
